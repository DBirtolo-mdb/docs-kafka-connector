.. _kafka-troubleshoot-invalid-resume-token:

====================
Invalid Resume Token
====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol


Overview
--------

Learn how to recover from an invalid resume token
in a MongoDB Kafka Connector source connector. 

Stack Trace
~~~~~~~~~~~

The following stack trace indicates that the source connector has an invalid resume token:

.. code-block:: text

   ...
   org.apache.kafka.connect.errors.ConnectException: ResumeToken not found.
   Cannot create a change stream cursor
   ...
   Command failed with error 286 (ChangeStreamHistoryLost): 'PlanExecutor
   error during aggregation :: caused by :: Resume of change stream was not
   possible, as the resume point may no longer be in the oplog
   ... 


.. _invalid-resume-token-cause:

Cause
-----

When the ID of your source connector's resume token does not correspond to any
entry in your MongoDB deployment's :ref:`oplog <replica-set-oplog>`, 
your connector has no way to determine where to begin to process your
MongoDB change stream. Click the following tabs to see scenarios 
in which you can experience this issue:

.. tabs::

   .. tab:: Paused Connector
      :tabid: paused-connector

      In this scenario, you pause your source connector and you fill your MongoDB
      deployment's oplog:
      
      #. You start a Kafka deployment with a {+source-connector+}.
      #. You produce a change event in your source MongoDB namespace, and your 
         connector stores a resume token corresponding to this event.
      #. You pause your source connector.
      #. While your connector pauses, you fill your MongoDB oplog such that MongoDB
         deletes the oplog entry corresponding to your resume token.
      #. You restart your source connector and it is unable to resume
         processing as its resume token does not exist in your MongoDB oplog.


   .. tab:: Infrequently Updated Namespace
      :tabid: infrequently-updated-namespace

      In this scenario, your source connector listens for changes on an infrequently
      updated MongoDB namespace:
      
      #. You start a Kafka deployment with a {+source-connector+}.
      #. You produce a change event in your source MongoDB namespace, and your
         connector stores a resume token corresponding to this event.
      #. Your source MongoDB namespace is not updated in the time it takes for your MongoDB
         deployment to rotate the change event corresponding to your resume token out of its
         oplog.
      #. You produce a change event in your source MongoDB namespace and your 
         source connector is unable to resume processing as its resume token does 
         not exist in your MongoDB oplog.

For more information on the oplog, see the 
:ref:`MongoDB Manual <replica-set-oplog>`.

For more information on change streams, see the
:ref:`<kafka-source-change-streams>` guide.

.. _troubleshoot-delete-stored-offsets:

Delete Stored Offsets
~~~~~~~~~~~~~~~~~~~~~

You can delete your Kafka Connect offset data, which contains your resume token,
to allow your connector to resume processing your change stream. This strategy is
more complex than the preceding strategy, but does not risk tolerating errors
unrelated to the invalid resume token.

.. As far as I can tell, there is not a straightforward way to tell at runtime
   which mode you are in. The Data Engineer Persona likely knows how they
   configured their pipeline, but if they do not know they may
   have to attempt both choices.

The steps to perform this strategy depend on whether you are running Kafka Connect
in distributed mode or standalone mode. Click on the tab corresponding to the
mode of your deployment: 

.. tabs::

   .. tab:: Distributed
      :tabid: distributed

      #. Delete the topic specified in the ``offset.storage.topic`` property of your
         Kafka Connect deployment. For more information on deleting topics in Apache Kafka, see the 
         `official Apache Kafka documentation <https://kafka.apache.org/081/documentation.html#basic_ops_add_topic>`__.

      #. Restart your source connector and continue to process change stream events. 

   .. tab:: Standalone
      :tabid: standalone

      #. Delete the file referenced by the ``offset.storage.file.filename`` property of
         your Kafka Connect deployment.

      #. Restart your source connector and continue to process change stream events. 

